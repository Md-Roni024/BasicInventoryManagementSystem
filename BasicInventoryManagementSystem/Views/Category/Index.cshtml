@model BasicInventoryManagementSystem.ViewModel.CategoryIndexViewModel

@{
    ViewData["Title"] = "Category List";
}

<style>
    .table td, .table th {
        text-align: center;
    }

    .table tbody tr {
        border-bottom: 2px solid #dadada;
    }

    .table {
        border: 2px solid #dadada;
        border-radius: 0.25rem;
    }

        .table thead th {
            border-bottom: 1.5px solid #dadada;
            background-color: #acc3e8;
        }

    .search-input {
        width: 300px;
        margin-right: 10px;
    }

    .pagination-container {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;
    }

    .pagination {
        display: inline-flex;
        list-style: none;
        padding-left: 0;
    }

        .pagination .page-item {
            margin: 0 3px;
        }

        .pagination .page-link {
            padding: 5px 10px;
            border-radius: 5px;
            color: #007bff;
            border: 1px solid #007bff;
            text-decoration: none;
            font-size: 0.9rem;
        }

            .pagination .page-link:hover {
                background-color: #0056b3;
                color: white;
            }

        .pagination .active .page-link {
            background-color: #007bff;
            color: white;
            border: 1px solid #007bff;
        }
</style>

<div class="d-flex justify-content-between mb-3">
    <h4>Category List</h4>
    <div class="d-flex justify-content-between gap-3">
        <form asp-action="Index" method="get" class="form-inline d-flex justify-content-lg-end">
            <input type="text" name="search" class="form-control search-input" placeholder="Search Categories" />
            <button type="submit" class="btn btn-secondary btn-sm">Search</button>
        </form>
        @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
        {
            <a asp-action="Create" class="btn btn-primary btn-sm">Add New Category</a>
        }
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Category Name</th>
            <th scope="col">Created Date</th>
            <th scope="col">Updated Date</th>
            @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
            {
                <th scope="col">Actions</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var category in Model.Categories)
        {
            <tr>
                <td>@category.Id</td>
                <td>@category.CategoryName</td>
                <td>@category.CreatedDate.ToString("g")</td>
                <td>@category.UpdatedDate.ToString("g")</td>
                @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@category.Id" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="Delete" asp-route-id="@category.Id" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<div class="pagination-container">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" class="page-link">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a asp-action="Index" asp-route-page="@i" class="page-link">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" class="page-link">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>
