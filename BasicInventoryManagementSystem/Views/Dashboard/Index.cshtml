@{
    ViewData["Title"] = "Dashboard - This Month";
}

<!-- Use Bootstrap for a modern, responsive layout -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="container mt-4">
    <div class="row">
        <!-- Summary Cards -->
        <div class="col-md-3">
            <div class="card text-white bg-primary mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total Sales</h5>
                    <p class="card-text">@ViewBag.TotalSales</p>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card text-white bg-success mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total Purchases</h5>
                    <p class="card-text">@ViewBag.TotalPurchases</p>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card text-white bg-warning mb-3">
                <div class="card-body">
                    <h5 class="card-title">Quantity Sold</h5>
                    <p class="card-text">@ViewBag.TotalQuantitySold</p>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card text-white bg-danger mb-3">
                <div class="card-body">
                    <h5 class="card-title">Quantity Purchased</h5>
                    <p class="card-text">@ViewBag.TotalQuantityPurchased</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Row for Charts -->
    <div class="row">
        <!-- Sales Chart -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header bg-info text-white">Sales Chart</div>
                <div class="card-body">
                    <canvas id="salesChart" height="200"></canvas>
                </div>
            </div>
        </div>

        <!-- Purchases Chart -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header bg-secondary text-white">Purchases Chart</div>
                <div class="card-body">
                    <canvas id="purchaseChart" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Distribution Pie Chart -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-dark text-white">Product Distribution</div>
                <div class="card-body">
                    <canvas id="productPieChart" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Sales Chart
    var salesCtx = document.getElementById('salesChart').getContext('2d');
    var salesData = @Html.Raw(Json.Serialize(ViewBag.SalesData));
    var salesChart = new Chart(salesCtx, {
        type: 'bar',
        data: {
            labels: salesData.map(s => s.Day),
            datasets: [{
                label: 'Total Sales',
                data: salesData.map(s => s.TotalSales),
                backgroundColor: 'rgba(54, 162, 235, 0.7)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                tooltip: {
                    enabled: true,
                    callbacks: {
                        label: function (tooltipItem) {
                            return 'Sales: $' + tooltipItem.raw;
                        }
                    }
                }
            }
        }
    });

    // Purchases Chart
    var purchaseCtx = document.getElementById('purchaseChart').getContext('2d');
    var purchaseData = @Html.Raw(Json.Serialize(ViewBag.PurchaseData));
    var purchaseChart = new Chart(purchaseCtx, {
        type: 'line',
        data: {
            labels: purchaseData.map(p => p.Day),
            datasets: [{
                label: 'Total Purchases',
                data: purchaseData.map(p => p.TotalPurchases),
                backgroundColor: 'rgba(75, 192, 192, 0.7)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2
            }]
        },
        options: {
            responsive: true,
            plugins: {
                tooltip: {
                    enabled: true,
                    callbacks: {
                        label: function (tooltipItem) {
                            return 'Purchases: $' + tooltipItem.raw;
                        }
                    }
                }
            }
        }
    });

</script>
